openapi: 3.0.0
info:
  title: The Fates API
  version: 1.0.1
  description: The Fates API contains a collection of tools for marketing optimization and analysis.
  termsOfService: https://www.fates.ai/terms-and-conditions
  contact:
    email: derek@acquireagency.com
servers:
  - url: https://api.fates.ai/{basePath}
    description: Production Server
    variables:
      basePath:
        default: v1
  - url: http://localhost:{port}/{basePath}
    description: Local testing server
    variables:
      port:
        default: '5000'
      basePath:
        default: v1
tags:
- name: optimize
  description: Marketing model optimization
- name: testBudget
  description: Test budget calculations
- name: Optimizations
  description: Ad/AdSet optimizations
- name: Facebook
  description: Methods relating to Facebook's Graph API
- name: Auth
  description: AuthN/AuthZ related methods
- name: Actions
  description: History of actions performed and available methods on them
- name: Killbot
  description: Methods related to The Fates Killbot
paths:
  /optimize:
    options:
      tags:
        - optimize
      summary: Respond to a preflight request
      operationId: api.optimize.views.options_run_optimize
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/optimize
      responses:
        200:
          description: Success
    post:
      tags:
      - optimize
      summary: Optimize model
      description: Perform an optimization using supplied parameters
      operationId: api.optimize.views.run_optimize
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/optimize
      requestBody:
        $ref: '#/components/requestBodies/OptParams'
      responses:
        200:
          description: Successfully Optimized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptResults'
        400:
          description: Validation Error
        403:
          description: Forbidden
  /testBudget:
    options:
      tags:
      - testBudget
      summary: Respond to a preflight request
      operationId: api.testBudget.views.options_test_budget
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/testBudget
      responses:
        '200':
          description: Success
    post:
      tags:
        - testBudget
      summary: Calculate test budget
      description: Perform calculation to determine test budget and other results
      operationId: api.testBudget.views.test_budget
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/testBudget
      requestBody:
        $ref: '#/components/requestBodies/TestBudgetParams'
      responses:
        200:
          description: Calculated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestBudgetResults'
  /scaleDescaleList/{accountId}:
    options:
      tags:
        - Optimizations
      summary: Respond to a preflight request
      operationId: api.killList.views.options_kill_list
      x-ggogle-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/scaleDescaleList/{accountId}
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        200:
          description: Success
    get:
      tags:
        - Optimizations
      summary: Generate recommendations for ad set scale and descale
      description: Compute odds ratios using ad set data from Facebook
      operationId: api.scaleDescaleList.views.scale_descale_list
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/scaleDescaleList/{accountId}
      parameters:
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/DatePreset'
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/FilteringParam'
        - $ref: '#/components/parameters/TimeIncrement'
        - $ref: '#/components/parameters/ActionTypes'
        - name: targetCpa
          in: query
          description: The cost per acquisition target
          schema:
            type: number
            minimum: 0
            exclusiveMinimum: true
          example: 220
        - name: oddsThresh
          in: query
          description: The odds ratio threshold for decisions
          schema:
            type: number
            minimum: 0
            exclusiveMinimum: true
          example: 10
      responses:
        200:
          description: Successfully generated list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scaleDescaleList'
        400:
          description: Validation Error
        403:
          description: Forbidden
  /facebook/{accountId}/insights:
    options:
      tags:
        - Facebook
      summary: Reponse to a preflight request
      operationId: api.facebook.views.options_insights
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/facebook/{accountId}/insights
      parameters:
        - $ref: '#/components/parameters/AccountId'
      responses:
        200:
          description: Success
    get:
      tags:
        - Facebook
      summary: Get Facebook Marketing data
      description: Use integrated Facebook Graph API to fetch insights data
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/facebook/{accountId}/insights
      parameters:
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/DatePreset'
        - $ref: '#/components/parameters/Level'
        - $ref: '#/components/parameters/FilteringParam'
        - $ref: '#/components/parameters/TimeIncrement'
        - $ref: '#/components/parameters/ActionTypes'
        - $ref: '#/components/parameters/Attributes'
      responses:
        200:
          description: Success
          content:
            application-json:
              schema:
                $ref: '#/components/schemas/FacebookData'
              examples:
                ad_data:
                  value:
                    ad_name: 'PR_M/F_28-45_Sports'
                    ad_id: 23849125833210264
                    spend: 500
                    omni_purchase: 10
  /facebook/ads:
    options:
      tags:
       - Facebook
      summary: Reponse to a preflight request
      operationId: api.facebook.views.options_batch_update_ads
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/facebook/ads
      responses:
        200:
          description: Success
    patch:
      tags:
       - Facebook
      summary: Batch update fields of facebook ad objects
      description: Change the field of an ad
      operationId: api.facebook.views.batch_update_ads
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/facebook/ads
      requestBody:
        $ref: '#/components/requestBodies/AdUpdate'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/AdUpdate'
              example:
                - id: 23849125833210264
                  status: success
                - id: 23849217817540264
                  status: error
  /facebook/ads/{adId}:
    patch:
      tags:
       - Facebook
      summary: Update fields of facebook ad objects
      description: Change the field of an ad
      operationId: api.facebook.views.update_ads
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/facebook/ads
      parameters:
        - in: path
          name: adId
          required: true
          schema:
            type: integer
        - in: query
          name: status
          required: true
          schema:
            type: string
            enum:
              - ACTIVE
              - PAUSED
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/requestBodies/AdUpdate'
              example:
                - id: 23849125833210264
                  status: success
                - id: 23849217817540264
                  status: error
  /actions/{actionId}/undo:
    post:
      tags:
        - Actions
      summary: Undo an action given the unique action id
      description: Does the opposite action of some other logged action matching the given id
      operationId: api.actions.views.undo_action
      parameters:
        - in: path
          name: actionId
          required: true
          schema:
            type: string
      responses:
        200:
          description: Action successfully undone
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                      - failure
  /actions:
    get:
      tags:
        - Actions
      summary: Get all actions
      description: Returns all actions that have been logged
      operationId: api.actions.views.get_all_actions
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actions'
  /actions/{actionId}:
    get:
      tags:
        - Actions
      summary: Get a specific action
      description: Returns an action with the given actionId
      operationId: api.actions.views.get_action
      parameters: 
        - in: path
          name: actionId
          schema:
            type: string
          required: true
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actions'
  /scheduler:
    get:
      tags:
        - Killbot
      summary: Get all scheduled jobs
      description: Returns all configured jobs
      operationId: api.scheduler.views.get_jobs
      parameters:
        - in: query
          name: page_token
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            appication/json:
              schema:
                $ref: '#/components/schemas/Job'
    post:
      tags:
        - Killbot
      summary: Create a scheduled job
      description: Schedule and configure a killbot job
      operationId: api.sceduler.views.create_job
      requestBody:
        $ref: '#/components/requestBodies/CreateJob'
      responses:
        200:
          description: Action successfully undone
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                      - failure
  /scheduler/{jobName}:
    delete:
      tags:
        - Killbot
      summary: Delete a scheduled job
      description: Permatently deletes a scheduled job given the id
      operationId: api.scheduler.views.delete_job
      parameters:
        - in: path
          name: jobName
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted job
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                      - failure
    patch:
      tags:
        - Killbot
      summary: Change a job's status
      description: Pause or enable a scheduled job
      operationId: api.scheduler.views.change_job_status
      parameters:
        - in: path
          name: jobName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: The action to be performed on the job
                  enum:
                    - "pause"
                    - "enable"
      responses:
        200:
          description: Successfully changed the jobs status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - success
                      - failure
  /sessionLogin:
    options:
      tags:
        - Auth
      summary: Reponse to a preflight request
      operationId: api.sessionLogin.views.options_session_login
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/sessionLogin
      responses:
        200:
          description: Success
    post:
      tags:
        - Auth
      summary: Authenticate user 
      description: Validate current user's ID Token and start a session
      operationId: api.sessionLogin.views.session_login
      x-google-backend:
        address: https://fates-api-lqbezgosoq-uc.a.run.app/v1/sessionLogin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
                  example: ey123h,df87a8dfjf-1237
      responses:
        200:
          description: login successful
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: success
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: session=abcde12345; Path=/v1; SameSite=None; Secure; Expires=2021-10-12 13:31
components:
  schemas:
    OptimizationData:
      required:
      - spend
      - revenue
      - aov
      - cogs
      - contributionMargin
      - grossMargin
      - scalePct
      - roas
      - breakevenRoas
      - purchases
      - totalCogs
      - cpa
      - fee
      - pctFee
      type: object
      properties:
        spend:
          type: number
          description: The dollar value of target total ad spend
          example: 5918
        revenue:
          type: number
          description: The dollar amount of target revenue
          example: 16289
        aov:
          type: number
          description: Average order value
          example: 50
        cogs:
          type: number
          description: The average cost of goods sold per order
          example: 10
        contributionMargin:
          type: number
          description: The dollar value of the resulting contribution margin
          example: 5961
        grossMargin:
          type: number
          description: The dollar value of the gross margin
          example: 4910
        scalePct:
          type: number
          description: The percentage change in target ad spend from previous period
          example: 18.37
        roas:
          type: number
          description: The target return on ad spend
          example: 2.75
        breakevenRoas:
          type: number
          description: The return on ad spend required for break even given all other variables are fixed
          example: 1.43
        purchases:
          type: number
          description: Total target purchases
          example: 326
        totalCogs:
          type: number
          description: Total dollar value of the cost to produce the goods sold
          example: 3257
        cpa:
          type: number
          description: The target cost per acquisition
          example: 18
        fee:
          type: number
          description: The fixed fee applied to the given time span
          example: 500
        pctFee:
          type: number
          description: The variable fee derived from total revenue or spend for the given time span
          example: 4
    OptParamsTimeSpans:
      type: object
      properties:
        objective:
          type: string
          description: Objective
          example: maxContributionMargin
          enum:
            - maxRevenue
            - maxContributionMargin
        descaleLimit:
          type: number
          description: A limit imposed on the percentage of descale suggested by the model
          example: 20
          minimum: 0
          maximum: 50
        lossThreshold:
          type: number
          description: Minimum desired contribution margin when optimizing on revenue
        improvementFactor:
          type: number
          description: A percentage increase to sales volume
          example: 5
          minimum: 0
          maximum: 1000
        seasonalityFactor:
          type: number
          description: A percentage increase to sales volume
          example: 25
          minimum: 0
          maximum: 100
        negativeSeasonalityFactor:
          type: number
          description: A percentage decrease to sales volume
          minimum: 0
          maximum: 100
        aov:
          type: number
          description: The average order value over a period
          example: 50
          minimum: 0
          exclusiveMinimum: true
        cogs:
          type: number
          description: The average cost of goods sold over a period
          example: 10
          minimum: 0
          exclusiveMinimum: true
    OptResults:
        description: Results of an optimization
        required:
        - months
        - totals
        type: object
        properties:
          months:
            type: array
            items:
              $ref: '#/components/schemas/OptimizationData'
          totals:
            type: object
            properties:
              schema:
                $ref: '#/components/schemas/OptimizationData'
    TestBudgetResults:
      description: Results of a test budget calculation
      type: object
      properties:
        testBudget:
          type: number
          description: The total amount allocation for test budget during {daysLeft}
          example: 2050
        testCPA:
          type: number
          description: The required CPA for test ads with budget allocation as given in testBudget field
          example: 300
        nonTestCPA:
          type: number
          description: The required CPA for non test ads with budget allocation as given in testBudget field
          example: 181
        numberAds:
          type: integer
          description: The estimated number of test ads that may be launched
          example: 4
    scaleDescaleList:
      description: A list of ad sets with scale/descale recommendations
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            description: The unique ad set identifier
          name:
            type: string
            description: The unique ad set name
          spend:
            type: number
            description: The dollar amount the ad set has spent in its lifetime
            minimum: 0
            exclusiveMinimum: true
            example: 1000 
          cpa:
            type: number
            description: The dollar cost per acquisition for the ad set in its lifetime
            minimum: 0
            exclusiveMinimum: true
            example: 20
          oddsRatio:
            type: number
            description: The calculated odds that the ad set performs at or over its target
            example: 11.8
          suggestedStatus:
            type: string
            description: Decision indicator for the ad set budget
            enum:
              - scale
              - descale
              - none
    Filtering:
      type: array
      items:
        description: a single filter condition
        type: object
        properties:
          field:
            type: string
            example: adset.effective_status
          operator:
            type: string
            enum:
            - EQUAL
            - NOT_EQUAL
            - GREATER_THAN
            - GREATER_THAN_OR_EQUAL
            - LESS_THAN
            - LESS_THAN_OR_EQUAL
            - IN_RANGE
            - NOT_IN_RANGE
            - CONTAIN
            - NOT_CONTAIN
            - IN
            - NOT_IN
            - STARTS_WITH
            - ENDS_WITH
            - ANY
            - ALL
            - AFTER
            - BEFORE
            - ON_OR_AFTER
            - ON_OR_BEFORE
            - NONE
            example: IN
          value:
            oneOf:
            - $ref: '#/components/schemas/FilterValue1'
            - $ref: '#/components/schemas/FilterValue2'
    FilterValue1:
      type: array
      description: Used in conjunction with <IN> operator
      items:
        type: string
        enum:
        - ACTIVE
        - PAUSED
        example: 'ACTIVE'
    FilterValue2:
      type: string
    FacebookData:
      type: array
      description: Facebook data in format of the Graph API data array
      items:
        type: object
        description: A row of data with labels
        additionalProperties:
          oneOf:
            - type: number
            - type: integer
            - type: string
    Actions:
      properties:
        id:
          description: Unique action id
          type: string
        date:
          description: UTC datetime
          format: date-time
          type: string
        isUndone:
          description: Identifier for if this action has been undone
          type: boolean
        type:
          description: The action type
          type: string
          enum:
            - killbotJob
            - killbotManageAd
            - undo
        userEmail:
          description: The email of the user who performed the action
          type: string
        extraInfo:
          type: object
          properties:
            field:
              type: string
              example: status
              description: The field being acted upon / updated
            resource:
              description: What is the object/resource being updated
              type: string
              enum:
                - ad
                - adset
                - campaign
            resourceId:
              type: integer
              description: Facebook's unique resource identifier
              example: "123456789"
            valueFrom:
              type: string
              description: The previous value for the field that is to be updated
              example: "ACTIVE"
            valueTo:
              type: string
              description: The new value for the field that is to be updated
              example: "PAUSED"
    Job:
      properties:
        accountId:
          description: The ID for the ad account
          type: string
          example: "123456789"
        name:
          description: The job name
          type: string
          example: "MyJob"
        schedule:
          description: The cron formatted schedule
          type: string
          example: "*/5 * * * *"
        state:
          description: The job state
          type: string
          enum:
            - ENABLED
            - PAUSED
            - DISABLED
            - STATE_UNSPECIFIED
            - UPDATE_FAILED
    JobConfig:
      properties:
        name:
          type: string
          description: The job name
          example: "Test Job"
        description:
          type: string
          description: The job description
        http_target:
          type: string
          description: Configured killbot URI
        http_method:
          type: string
          description: HTTP verb
          example: "POST"
        headers:
          type: object
          description: Headers to send in the job http target
          example: {"Content-Type": "application/json"}
        oidc_token:
          type: object
          description: Authorization header config
          properties:
            service_account_email:
              type: string
              description: email of the authorizing service account
              example: "cloud-scheduler@PROJECT_ID.iam.gserviceaccount.com"
            audience:
              type: string
              description: The aud uri for the token
              example: "https://api.fates.ai/v1/killbot"
    DefaultError:
      required:
      - timestamp
      - status
      - error
      - message
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: UTC formatted timestamp of error
        status:
          type: integer
          description: Error status code
          maximum: 600
          minimum: 100
          example: 400
        error:
          type: string
          description: Error identifier
          example: InvalidAPIRequest
        message:
          type: string
          description: User friendly error message
          example: Uh oh! Something went wrong.
        devMessage:
          type: string
          description: Developer friendly error message
        help:
          type: string
          description: URL for additional help and documentation regarding error
          example: See app.fates.ai/api/v1/docs/optimize
  requestBodies:
    OptParams:
      required: true
      content:
        application/json:
          schema:
            properties:
              initialSpend:
                type: number
                description: The dollar value of spend during the initial period
                example: 5000
                minimum: 0
                exclusiveMinimum: true
              initialRoas:
                type: number
                description: The ROAS attained during the initial period
                example: 3
                minimum: 0
                exclusiveMinimum: true
              fee:
                type: number
                description: A fixed cost fee applied to each period
                example: 1000
                minimum: 0
              pctFee:
                type: number
                description: A variable cost applied to each period
                example: 4
                minimum: 0
              pctFeeBasis:
                type: string
                description: Specification of percent fee
                example: revenue
                enum:
                  - revenue
                  - spend
              attributionLoss:
                type: number
                description: Estimated percentage loss of revenue due to attribution
                minimum: 0
                exclusiveMinimum: true
              timeSpans:
                type: array
                items:
                  $ref: '#/components/schemas/OptParamsTimeSpans'
    TestBudgetParams:
      required: true
      content:
        application/json:
          schema:
            properties:
              campaignSpend:
                type: number
                description: Total amount of ad spend in nDays
                example: 20000
                minimum: 0
                exclusiveMinimum: true
              campaignDailyBudget:
                type: number
                description: Daily total amount of ad spend budgeted for campaign
                example: 1500
                minimum: 0
                exclusiveMinimum: true
              testAdDailyBudget:
                type: number
                description: Daily total amount of ad spend budgeted for a test ad
                example: 100
                minimum: 0
                exclusiveMinimum: true
              nDays:
                type: integer
                description: Number of days the campaign has so far this month
                example: 25
                minimum: 0
                exclusiveMinimum: true
                maximum: 30
              campaignPurchases:
                type: integer
                description: Total number of purchases gained in campaign so far this month
                example: 110
                minimum: 0
              CPATarget:
                type: number
                description: The goal cost per acquisition
                example: 220
                minimum: 0
                exclusiveMinimum: true
              daysLeft:
                type: integer
                description: How many days are left in the month
                example: 5
                minimum: 0
                exclusiveMinimum: true
                maximum: 30
    Facebook:
      required: true
      content:
        application/json:
          schema:
            properties:
              data:
                description: Facebook ads data
                type: array
                items:
                  properties:
                    id:
                      type: string
                      description: The unique ad identifier
                      example: 6257020051607
                    name:
                      type: string
                      description: The unique asset name
                      example: 'PR_SimilarBrands_F_20-54_US+CA_ALL_ALL____'
                    dailyBudget:
                      type: number
                      description: The dollar amount of budget for this asset
                      minimum: 0
                      exclusiveMinimum: true
                      example: 1200
                    spend:
                      type: number
                      description: The dollar amount the asset has spent in its lifetime
                      minimum: 0
                      exclusiveMinimum: true
                      example: 1000
                    purchases:
                      type: integer
                      description: The total number of purchases attributed to the asset in its lifetime
                      minimum: 0
                      example: 10
              targetCpa:
                type: number
                description: The target cost per acquisition in dollars
                minimum: 0
                exclusiveMinimum: true
                example: 50
              oddsThresh:
                type: number
                description: Decision threshold for status field indicator
                minimum: 0
                exclusiveMinimum: true
                example: 10
    AdUpdate:
      required: true
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: The ad id
                  example: 23849125833210264
                status:
                  type: string
                  description: The status of the ad
                  enum:
                    - ACTIVE
                    - PAUSED
                    - ARCHIVED
                    - DELETED
                    - success
                    - error
    CreateJob:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              parent:
                type: string
                description: The location name
                example: "projects/PROJECT_ID/locations/LOCATION_ID"
              job:
                $ref: '#/components/schemas/JobConfig'
              schedule:
                type: string
                description: Cron job schedule
                example: "*/5 * * * *"
  parameters:
    AccountId:
      in: path
      name: accountId
      required: true
      schema:
        type: string
        pattern: 'act_\d+'
        example: 'act_170293010980019'
    Fields:
      in: query
      name: fields
      required: false
      schema:
        type: string
        pattern: '[0-9a-zA-Z]+(,[0-9a-zA-Z]+)*'
        example: 'spend,impressions,actions'
    Level:
      in: query
      name: level
      required: false
      schema:
        type: string
        example: adset
        enum:
        - campaign
        - adset
        - ad
    TimeIncrement:
      in: query
      name: time_increment
      required: false
      description: How to break down the result.
      schema:
        oneOf:
        - type: string
          enum:
          - monthly
          - all_days
          default: all_days
        - type: integer
          description: If it is an integer, it is the number of days from 1 to 90.
          example: 1
    DatePreset:
      in: query
      name: date_preset
      required: false
      schema:
        type: string
        enum: [today, yesterday, this_month, last_month, this_quarter, maximum, last_3d, last_7d, last_14d, last_28d, last_30d, last_90d, last_week_mon_sun, last_week_sun_sat, last_quarter, last_year, this_week_mon_today, this_week_sun_today, this_year]
        example: last_30d
        default: last_30d
    FilteringParam:
      in: query
      name: filtering
      required: false
      schema:
        $ref: '#/components/schemas/Filtering'
    ActionTypes:
      in: query
      name: action_types
      required: false
      schema:
        type: string
        pattern: '[0-9a-zA-Z]+(,[0-9a-zA-Z]+)*'
        example: omni_purchase,omni_add_to_cart
    Attributes:
      in: query
      name: attributes
      required: false
      schema:
        type: string
        pattern: '[0-9a-zA-Z]+(,[0-9a-zA-Z]+)*'
        default: ''
        example: 'daily_budget,objective'
  responses:
    GeneralError:
      description: A general error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DefaultError'
