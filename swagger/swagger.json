{
  "swagger" : "2.0",
  "info" : {
    "description" : "The Fates API contains a collection of tools for marketing optimization and analysis.",
    "version" : "1.0.0",
    "title" : "The Fates API",
    "termsOfService" : "https://www.fates.ai/terms-and-conditions",
    "contact" : {
      "email" : "derek@acquireagency.com"
    }
  },
  "host" : "api.fates.ai",
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "optimize",
    "description" : "Marketing model optimization"
  }, {
    "name" : "testBudget",
    "description" : "Test budget calculations"
  }, {
    "name" : "auth",
    "description" : "Operations for user authentication",
    "externalDocs" : {
      "description" : "Find out more about firebase auth",
      "url" : "https://firebase.google.com/docs/auth"
    }
  }, {
    "name" : "sessionLogin",
    "description" : "Generate session cookie",
    "externalDocs" : {
      "description" : "Find out more about managing session cookies",
      "url" : "https://firebase.google.com/docs/auth/admin/manage-cookies"
    }
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/optimize" : {
      "post" : {
        "tags" : [ "optimize" ],
        "summary" : "Perform model optimization",
        "operationId" : "post_optimize",
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/OptParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/OptResults"
            }
          },
          "400" : {
            "description" : "Validation Error",
            "schema" : {
              "$ref" : "#/definitions/DefaultError"
            }
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/optimize"
        }
      },
      "options" : {
        "tags" : [ "optimize" ],
        "summary" : "Respond to a preflight request",
        "operationId" : "options_optimize",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/optimize"
        }
      }
    },
    "/testBudget" : {
      "post" : {
        "tags" : [ "testBudget" ],
        "operationId" : "post_test_budget",
        "parameters" : [ {
          "in" : "body",
          "name" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TestBudgetParams"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TestBudgetResults"
            }
          },
          "400" : {
            "description" : "BAD REQUEST",
            "schema" : {
              "$ref" : "#/definitions/DefaultError"
            }
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/testBudget"
        }
      },
      "options" : {
        "tags" : [ "testBudget" ],
        "summary" : "Respond to a preflight request",
        "operationId" : "options_test_budget",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/testBudget"
        }
      }
    },
    "/auth" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "Obtain a user resource by email or uid",
        "operationId" : "get_auth",
        "parameters" : [ {
          "name" : "uid or email",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/auth\""
        }
      },
      "post" : {
        "tags" : [ "auth" ],
        "summary" : "Register a new user to database",
        "operationId" : "post_auth",
        "parameters" : [ {
          "in" : "body",
          "name" : "user registration data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateUser"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/auth"
        }
      },
      "delete" : {
        "tags" : [ "auth" ],
        "summary" : "Delete a user from the database",
        "operationId" : "delete_auth",
        "parameters" : [ {
          "name" : "uid",
          "in" : "query",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Deleted"
          },
          "404" : {
            "description" : "User not found"
          },
          "403" : {
            "description" : "Insufficient privelages"
          }
        }
      },
      "options" : {
        "tags" : [ "auth" ],
        "summary" : "Respond to a preflight request",
        "operationId" : "options_auth",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/testBudget"
        }
      },
      "patch" : {
        "tags" : [ "auth" ],
        "summary" : "Change a user's email or password",
        "operationId" : "patch_auth",
        "parameters" : [ {
          "in" : "body",
          "name" : "update user data",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateUser"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated"
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/auth"
        }
      }
    },
    "/sessionLogin" : {
      "post" : {
        "tags" : [ "sessionLogin" ],
        "summary" : "Log in a user",
        "operationId" : "post_sessionLogin",
        "parameters" : [ {
          "in" : "body",
          "name" : "ID Token",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SessionLogin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "401" : {
            "description" : "Could not authenticate"
          },
          "404" : {
            "description" : "User not found"
          }
        }
      },
      "options" : {
        "tags" : [ "sessionLogin" ],
        "summary" : "Respond to a preflight request",
        "operationId" : "options_session_login",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "x-google-backend" : {
          "address" : "https://fates-api-lqbezgosoq-uc.a.run.app/v1/sessionLogin"
        }
      }
    }
  },
  "definitions" : {
    "OptParams" : {
      "type" : "object",
      "properties" : {
        "initialSpend" : {
          "type" : "number",
          "example" : 5000.0,
          "description" : "The dollar value of spend during the initial period",
          "minimum" : 0,
          "exclusiveMinimum" : true
        },
        "initialRoas" : {
          "type" : "number",
          "example" : 3.0,
          "description" : "The ROAS attained during the initial period",
          "minimum" : 0,
          "exclusiveMinimum" : true
        },
        "fee" : {
          "type" : "number",
          "example" : 1000.0,
          "description" : "A fixed cost fee applied to each period",
          "minimum" : 0
        },
        "pctFee" : {
          "type" : "number",
          "example" : 4.0,
          "description" : "A variable cost applied to each period",
          "minimum" : 0
        },
        "pctFeeBasis" : {
          "type" : "string",
          "example" : "revenue",
          "description" : "Specification of percent fee",
          "enum" : [ "revenue", "spend" ]
        },
        "attributionLoss" : {
          "type" : "number",
          "description" : "Estimated percentage loss of revenue due to attribution",
          "minimum" : 0,
          "exclusiveMinimum" : true
        },
        "timeSpans" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptParamsTimeSpans"
          }
        }
      }
    },
    "OptParamsTimeSpans" : {
      "type" : "object",
      "properties" : {
        "objective" : {
          "type" : "string",
          "example" : "maxContributionMargin",
          "description" : "Objective",
          "enum" : [ "maxRevenue", "maxContributionMargin" ]
        },
        "descaleLimit" : {
          "type" : "number",
          "example" : 20.0,
          "description" : "A limit imposed on the percentage of descale suggested by the model",
          "minimum" : 0,
          "maximum" : 50
        },
        "lossThreshold" : {
          "type" : "number",
          "description" : "Minimum desired contribution margin when optimizing on revenue"
        },
        "improvementFactor" : {
          "type" : "number",
          "example" : 5.0,
          "description" : "A percentage increase to sales volume",
          "minimum" : 0,
          "maximum" : 1000
        },
        "seasonalityFactor" : {
          "type" : "number",
          "example" : 25.0,
          "description" : "A percentage increase to sales volume",
          "minimum" : 0,
          "maximum" : 100
        },
        "negativeSeasonalityFactor" : {
          "type" : "number",
          "description" : "A percentage decrease to sales volume",
          "minimum" : 0,
          "maximum" : 100
        },
        "aov" : {
          "type" : "number",
          "example" : 50.0,
          "description" : "The average order value over a period",
          "minimum" : 0,
          "exclusiveMinimum" : true
        },
        "cogs" : {
          "type" : "number",
          "example" : 10.0,
          "description" : "The average cost of goods sold over a period",
          "minimum" : 0,
          "exclusiveMinimum" : true
        }
      }
    },
    "DefaultError" : {
      "type" : "object",
      "properties" : {
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "UTC formatted timestamp of error"
        },
        "status" : {
          "type" : "integer",
          "example" : 400,
          "description" : "Error status code"
        },
        "error" : {
          "type" : "string",
          "example" : "InvalidAPIRequest",
          "description" : "Error identifier"
        },
        "message" : {
          "type" : "string",
          "example" : "Uh oh! Something went wrong.",
          "description" : "User friendly error message"
        },
        "devMessage" : {
          "type" : "string",
          "description" : "Developer friendly error message"
        },
        "help" : {
          "type" : "string",
          "example" : "See app.fates.ai/api/v1/docs/optimize",
          "description" : "URL for additional help and documentation regarding error"
        }
      }
    },
    "OptResults" : {
      "type" : "object",
      "properties" : {
        "months" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/OptimizationData"
          }
        },
        "totals" : {
          "$ref" : "#/definitions/OptimizationData"
        }
      }
    },
    "OptimizationData" : {
      "type" : "object",
      "properties" : {
        "spend" : {
          "type" : "number",
          "example" : 5918.0,
          "description" : "The dollar value of target total ad spend"
        },
        "revenue" : {
          "type" : "number",
          "example" : 16289.0,
          "description" : "The dollar amount of target revenue"
        },
        "aov" : {
          "type" : "number",
          "example" : 50.0,
          "description" : "Average order value"
        },
        "cogs" : {
          "type" : "number",
          "example" : 10.0,
          "description" : "The average cost of goods sold per order"
        },
        "contributionMargin" : {
          "type" : "number",
          "example" : 5961.0,
          "description" : "The dollar value of the resulting contribution margin"
        },
        "grossMargin" : {
          "type" : "number",
          "example" : 4910.0,
          "description" : "The dollar value of the gross margin"
        },
        "scalePct" : {
          "type" : "number",
          "example" : 18.37,
          "description" : "The percentage change in target ad spend from previous period"
        },
        "roas" : {
          "type" : "number",
          "example" : 2.75,
          "description" : "The target return on ad spend"
        },
        "breakevenRoas" : {
          "type" : "number",
          "example" : 1.43,
          "description" : "The return on ad spend required for break even given all other variables are fixed"
        },
        "purchases" : {
          "type" : "number",
          "example" : 326.0,
          "description" : "Total target purchases"
        },
        "totalCogs" : {
          "type" : "number",
          "example" : 3257.0,
          "description" : "Total dollar value of the cost to produce the goods sold"
        },
        "cpa" : {
          "type" : "number",
          "example" : 18.0,
          "description" : "The target cost per acquisition"
        },
        "fee" : {
          "type" : "number",
          "example" : 500.0,
          "description" : "The fixed fee applied to the given time span"
        },
        "pctFee" : {
          "type" : "number",
          "example" : 4.0,
          "description" : "The variable fee derived from total revenue or spend for the given time span"
        }
      }
    },
    "TestBudgetParams" : {
      "type" : "object",
      "properties" : {
        "campaignSpend" : {
          "type" : "number",
          "example" : 20000.0,
          "description" : "Total amount of ad spend in nDays",
          "minimum" : 0,
          "exclusiveMinimum" : true
        },
        "campaignDailyBudget" : {
          "type" : "number",
          "example" : 1500.0,
          "description" : "Daily total amount of ad spend budgeted for campaign",
          "minimum" : 0,
          "exclusiveMinimum" : true
        },
        "testAdDailyBudget" : {
          "type" : "number",
          "example" : 100.0,
          "description" : "Daily total amount of ad spend budgeted for a test ad",
          "minimum" : 0,
          "exclusiveMinimum" : true
        },
        "nDays" : {
          "type" : "integer",
          "example" : 25,
          "description" : "Number of days the campaign has so far this month",
          "minimum" : 0,
          "maximum" : 30,
          "exclusiveMinimum" : true
        },
        "campaignPurchases" : {
          "type" : "integer",
          "example" : 110,
          "description" : "Total number of purchases gained in campaign so far this month",
          "minimum" : 0
        },
        "CPATarget" : {
          "type" : "number",
          "example" : 220.0,
          "description" : "The goal cost per acquisition",
          "minimum" : 0,
          "exclusiveMinimum" : true
        },
        "daysLeft" : {
          "type" : "integer",
          "example" : 5,
          "description" : "How many days are left in the month",
          "minimum" : 0,
          "maximum" : 30,
          "exclusiveMinimum" : true
        }
      }
    },
    "TestBudgetResults" : {
      "type" : "object",
      "properties" : {
        "testBudget" : {
          "type" : "number",
          "example" : 2050.0,
          "description" : "The total amount allocation for test budget during {daysLeft}"
        },
        "testCPA" : {
          "type" : "number",
          "example" : 300.0,
          "description" : "The required CPA for test ads with budget allocation as given in testBudget field"
        },
        "nonTestCPA" : {
          "type" : "number",
          "example" : 181.0,
          "description" : "The required CPA for non test ads with budget allocation as given in testBudget field"
        },
        "numberAds" : {
          "type" : "integer",
          "example" : 4,
          "description" : "The estimated number of test ads that may be launched"
        }
      }
    },
    "CreateUser" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "uid" : {
          "type" : "string",
          "description" : "The uid to assign to the newly created user. Must be a string between 1 and 128 characters long, inclusive. If not provided, a random uid will be automatically generated.",
          "minLength" : 1,
          "maxLength" : 128
        },
        "email" : {
          "type" : "string",
          "format" : "email",
          "description" : "A user's email address. Must be a valid email address."
        },
        "emailVerified" : {
          "type" : "boolean",
          "description" : "Whether or not the user's primary email is verified. If not provided, the default is false."
        },
        "phoneNumber" : {
          "type" : "string",
          "description" : "The user's primary phone number. Must be a valid E.164 spec compliant phone number.",
          "minLength" : 10,
          "maxLength" : 20
        },
        "password" : {
          "type" : "string",
          "description" : "The user's raw, unhashed password. Must be at least six characters long.",
          "minLength" : 8,
          "maxLength" : 20
        },
        "displayName" : {
          "type" : "string",
          "description" : "A user's display name.",
          "maxLength" : 16
        },
        "photoURL" : {
          "type" : "string",
          "description" : "The URL for a user's photo."
        },
        "disabled" : {
          "type" : "boolean",
          "description" : "Whether or not the user is disabled. true for disabled; false for enabled. If not provided, the default is false."
        }
      },
      "title" : "CreateUser",
      "description" : "Register a new user into the database."
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "createdAt" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "emailVerified" : {
          "type" : "boolean"
        },
        "lastLoginAt" : {
          "type" : "string"
        },
        "lastRefreshAt" : {
          "type" : "string"
        },
        "localId" : {
          "type" : "string"
        },
        "passwordHash" : {
          "type" : "string"
        },
        "passwordUpdatedAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "providerUserInfo" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "email" : {
                "type" : "string"
              },
              "federatedId" : {
                "type" : "string"
              },
              "providerId" : {
                "type" : "string"
              },
              "rawId" : {
                "type" : "string"
              }
            }
          }
        },
        "validSince" : {
          "type" : "string"
        }
      },
      "title" : "User",
      "description" : "User data"
    },
    "SessionLogin" : {
      "type" : "object",
      "properties" : {
        "idToken" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 128
        }
      },
      "title" : "SessionLogin",
      "description" : "Log in a user"
    }
  }
}